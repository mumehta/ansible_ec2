# Server is defined in inventory file
- hosts: server
  become: yes
  vars:
    - acme_challenge_type: http-01
    - acme_directory: https://acme-v02.api.letsencrypt.org/directory
    - acme_version: 2
    # Domain verification email    
    - acme_email: munish.mehta.au@gmail.com
    - letsencrypt_dir: /etc/letsencrypt
    - letsencrypt_keys_dir: /etc/letsencrypt/keys
    - letsencrypt_csrs_dir: /etc/letsencrypt/csrs
    - letsencrypt_certs_dir: /etc/letsencrypt/certs
    - letsencrypt_account_key: /etc/letsencrypt/account/account.key
    # Domain where lets encrypt cert to be applied
    - domain_name: munish.cf
  tasks:

    # Create the Letâ€™s Encrypt Directories and Account Key
    - name: "Create required directories in /etc/letsencrypt"
      file:
        path: "/etc/letsencrypt/{{ item }}"
        state: directory
        owner: root
        group: root
        mode: u=rwx,g=x,o=x
      with_items:
        - account
        - certs
        - csrs
        - keys

    - name: "Generate a Let's Encrypt account key"
      shell: "if [ ! -f {{ letsencrypt_account_key }} ]; then openssl genrsa 4096 | sudo tee {{ letsencrypt_account_key }}; fi"

    # Generate private key and Certificate signing request      
    - name: "Generate Let's Encrypt private key"
      shell: "openssl genrsa 4096 | sudo tee /etc/letsencrypt/keys/{{ domain_name }}.key"

    - name: "Generate Let's Encrypt CSR"
      shell: "openssl req -new -sha256 -key /etc/letsencrypt/keys/{{ domain_name }}.key -subj \"/CN={{ domain_name }}\" -reqexts SAN -config <(cat /etc/pki/tls/openssl.cnf <(printf \"\n[SAN]\nsubjectAltName=DNS:{{ domain_name }},DNS:www.{{ domain_name }}\")) | sudo tee /etc/letsencrypt/csrs/{{ domain_name }}.csr"
      args:
        executable: /bin/bash
        
    # Initiating ACME Validation Process
    - name: "Begin Let's Encrypt challenges"
      acme_certificate:
        acme_directory: "{{ acme_directory }}"
        acme_version: "{{ acme_version }}"
        account_key_src: "{{ letsencrypt_account_key }}"
        account_email: "{{ acme_email }}"
        terms_agreed: 1
        challenge: "{{ acme_challenge_type }}"
        csr: "{{ letsencrypt_csrs_dir }}/{{ domain_name }}.csr"
        dest: "{{ letsencrypt_certs_dir }}/{{ domain_name }}.crt"
        fullchain_dest: "{{ letsencrypt_certs_dir }}/fullchain_{{ domain_name }}.crt"
        remaining_days: 91
      # Register name variable by the domain name being registered
      register: acme_challenge_munish_cf

    # Implementing the ACME Challenge Files  
    - name: "Create .well-known/acme-challenge directory"
      file:
        # Document root path
        path: /usr/share/empty/.well-known/acme-challenge
        state: directory
        owner: root
        group: root
        mode: u=rwx,g=rx,o=rx

    - name: "Implement http-01 challenge files"
      copy:
        content: "{{ acme_challenge_munish_cf['challenge_data'][item]['http-01']['resource_value'] }}"
        dest: "/usr/share/empty/{{ acme_challenge_munish_cf['challenge_data'][item]['http-01']['resource'] }}"
        owner: root
        group: root
        mode: u=rw,g=r,o=r
      with_items:
        - "{{ domain_name }}"
        - "www.{{ domain_name }}"
    
    # Acquiring certificate
    - name: "Complete Let's Encrypt challenges"
      letsencrypt:
        acme_directory: "{{ acme_directory }}"
        acme_version: "{{ acme_version }}"
        account_key_src: "{{ letsencrypt_account_key }}"
        account_email: "{{ acme_email }}"
        challenge: "{{ acme_challenge_type }}"
        csr: "{{ letsencrypt_csrs_dir }}/{{ domain_name }}.csr"
        dest: "{{ letsencrypt_certs_dir }}/{{ domain_name }}.crt"
        chain_dest: "{{ letsencrypt_certs_dir }}/chain_{{ domain_name }}.crt"
        fullchain_dest: "{{ letsencrypt_certs_dir }}/fullchain_{{ domain_name }}"
        data: "{{ acme_challenge_munish_cf }}"